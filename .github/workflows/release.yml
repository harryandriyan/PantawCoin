name: Build and Release PantawCoin

on:
  push:
    tags:
      - "v*" # Run workflow on version tags, e.g. v1.0.0

# Add permissions block at the top level
permissions:
  contents: write # This is required for creating releases

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Swift
        uses: swift-actions/setup-swift@v1
        with:
          swift-version: "5.9"

      - name: Build for macOS
        run: |
          swift build -c release --disable-sandbox

      - name: Create app bundle
        run: |
          mkdir -p PantawCoin.app/Contents/{MacOS,Resources}
          cp .build/release/PantawCoin PantawCoin.app/Contents/MacOS/
          cp -R Sources/PantawCoin/Resources/* PantawCoin.app/Contents/Resources/ || echo "Warning: Resources directory may not exist or be empty"

          # Create Info.plist
          cat > PantawCoin.app/Contents/Info.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>CFBundleExecutable</key>
              <string>PantawCoin</string>
              <key>CFBundleIconFile</key>
              <string>AppIcon</string>
              <key>CFBundleIdentifier</key>
              <string>com.pantawcoin.app</string>
              <key>CFBundleInfoDictionaryVersion</key>
              <string>6.0</string>
              <key>CFBundleName</key>
              <string>PantawCoin</string>
              <key>CFBundlePackageType</key>
              <string>APPL</string>
              <key>CFBundleShortVersionString</key>
              <string>${GITHUB_REF_NAME#v}</string>
              <key>CFBundleVersion</key>
              <string>${GITHUB_REF_NAME#v}</string>
              <key>LSMinimumSystemVersion</key>
              <string>12.0</string>
              <key>LSUIElement</key>
              <true/>
          </dict>
          </plist>
          EOF

          # Create a simple default icon if the icon generation fails
          mkdir -p PantawCoin.app/Contents/Resources/

          # Check if the AppIcons directory exists
          if [ -d "Sources/PantawCoin/Resources/AppIcons/Assets.xcassets/AppIcon.appiconset" ]; then
            # Create icns file from png
            mkdir -p PantawCoin.iconset
            
            # Copy icon files with error handling
            cp Sources/PantawCoin/Resources/AppIcons/Assets.xcassets/AppIcon.appiconset/16.png PantawCoin.iconset/icon_16x16.png || echo "Warning: 16.png not found"
            cp Sources/PantawCoin/Resources/AppIcons/Assets.xcassets/AppIcon.appiconset/32.png PantawCoin.iconset/icon_16x16@2x.png || echo "Warning: 32.png not found"
            cp Sources/PantawCoin/Resources/AppIcons/Assets.xcassets/AppIcon.appiconset/32.png PantawCoin.iconset/icon_32x32.png || echo "Warning: 32.png not found"
            cp Sources/PantawCoin/Resources/AppIcons/Assets.xcassets/AppIcon.appiconset/64.png PantawCoin.iconset/icon_32x32@2x.png || echo "Warning: 64.png not found"
            cp Sources/PantawCoin/Resources/AppIcons/Assets.xcassets/AppIcon.appiconset/128.png PantawCoin.iconset/icon_128x128.png || echo "Warning: 128.png not found"
            cp Sources/PantawCoin/Resources/AppIcons/Assets.xcassets/AppIcon.appiconset/256.png PantawCoin.iconset/icon_128x128@2x.png || echo "Warning: 256.png not found"
            cp Sources/PantawCoin/Resources/AppIcons/Assets.xcassets/AppIcon.appiconset/256.png PantawCoin.iconset/icon_256x256.png || echo "Warning: 256.png not found"
            cp Sources/PantawCoin/Resources/AppIcons/Assets.xcassets/AppIcon.appiconset/512.png PantawCoin.iconset/icon_256x256@2x.png || echo "Warning: 512.png not found"
            cp Sources/PantawCoin/Resources/AppIcons/Assets.xcassets/AppIcon.appiconset/512.png PantawCoin.iconset/icon_512x512.png || echo "Warning: 512.png not found"
            cp Sources/PantawCoin/Resources/AppIcons/Assets.xcassets/AppIcon.appiconset/1024.png PantawCoin.iconset/icon_512x512@2x.png || echo "Warning: 1024.png not found"
            
            # Try to generate ICNS file
            iconutil -c icns PantawCoin.iconset -o PantawCoin.app/Contents/Resources/AppIcon.icns || {
              echo "Failed to generate ICNS file. Using a fallback method."
              # If iconutil fails, try to use the largest available icon directly
              if [ -f "Sources/PantawCoin/Resources/AppIcons/Assets.xcassets/AppIcon.appiconset/1024.png" ]; then
                cp Sources/PantawCoin/Resources/AppIcons/Assets.xcassets/AppIcon.appiconset/1024.png PantawCoin.app/Contents/Resources/AppIcon.png
                echo "Using 1024.png as AppIcon.png"
              elif [ -f "Sources/PantawCoin/Resources/AppIcons/appstore.png" ]; then
                cp Sources/PantawCoin/Resources/AppIcons/appstore.png PantawCoin.app/Contents/Resources/AppIcon.png
                echo "Using appstore.png as AppIcon.png"
              fi
            }
          else
            echo "AppIcon.appiconset directory not found. Using fallback icon."
            # Check if we have an appstore icon as mentioned in the build_app.sh script
            if [ -f "Sources/PantawCoin/Resources/AppIcons/appstore.png" ]; then
              cp Sources/PantawCoin/Resources/AppIcons/appstore.png PantawCoin.app/Contents/Resources/AppIcon.icns
              echo "Using appstore.png as AppIcon.icns"
            fi
          fi

          # Create DMG
          hdiutil create -volname "PantawCoin" -srcfolder PantawCoin.app -ov -format UDZO PantawCoin-${GITHUB_REF_NAME#v}.dmg

      # Add a step to verify the built files exist
      - name: Verify built files
        run: |
          ls -la PantawCoin-*.dmg || echo "DMG file not found!"
          ls -la .build/release/PantawCoin || echo "Binary not found!"

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            PantawCoin-*.dmg
            .build/release/PantawCoin
          name: PantawCoin ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
          # Add this to prevent the default source code archives
          body: |
            ## PantawCoin ${{ github.ref_name }}

            ### Installation

            Download the DMG file below and drag the app to your Applications folder.

            ### Changes

            See the release notes below for details on changes in this version.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
